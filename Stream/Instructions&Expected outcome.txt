Cpp
# Compile with OpenMP and architecture-specific optimizations
g++ -O3 -march=native -fopenmp -std=c++17 stream_triad.cpp -o stream_triad

# Set thread affinity (Linux example)
export OMP_NUM_THREADS=$(nproc)
export OMP_PROC_BIND=close
export OMP_PLACES=cores

# Run the benchmark
./stream_triad

Output:
STREAM Triad Benchmark
Array size: 134217728 elements (1073.74 MB each)
Threads: 16
Time: 0.045723 seconds
Bandwidth: 84.3162 GB/s
First 3 elements: [7, 7, 7]

Fortran:
# Compile with OpenCoarrays (GCC example):
caf -O3 -march=native -fopenmp -fcoarray=lib stream_triad.f90 -o stream_triad

# Run with 4 processes (adjust for your system):
cafrun -n 4 ./stream_triad

STREAM Triad Benchmark Results:
 Number of images: 4
 Array size: 134217728 elements per array
 Total time:  0.047 seconds
 Bandwidth:  67.2 GB/s
 Sample values:     7.0    7.0    7.0
